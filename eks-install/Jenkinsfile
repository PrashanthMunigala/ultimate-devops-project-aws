pipeline {
    agent any
    parameters {
        choice(name: 'ACTION', choices: ['plan', 'apply', 'destroy'], description: 'Select the action')
        string(name: 'BUILD_BACKEND', defaultValue: 'init', description: 'Terraform initialize')
        string(name: 'BACKEND_TERRAFORM_APPLY', defaultValue: 'apply', description: 'Terraform apply')
        string(name: 'BACKEND_TERRAFORM_DESTROY', defaultValue: 'destroy', description: 'Terraform destroy')
    }
    stages {
        stage('git clone') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/PrashanthMunigala/ultimate-devops-project-aws.git']])
            }
        }
        stage('build backend') {
            steps {
                dir('eksinstall/backend') {
                    sh 'terraform init'
                }
            }
        }
        stage('backend terraform apply') {
            when {
                expression { return params.ACTION == 'apply' }
            }
            steps {
                dir('eksinstall/backend') {
                    sh 'terraform apply'
                }
            }
        }
        stage('backend terraform destroy') {
            when {
                expression { return params.ACTION == 'destroy' }
            }
            steps {
                dir('eksinstall/backend') {
                    sh 'terraform destroy'
                }
            }
        }
        stage('Wait') {
            steps {
                script {
                    echo 'Waiting for 4 minutes before starting the next stage...'
                    sleep(time: 4, unit: 'MINUTES')
                }
            }
        }
        stage('Terraform Init') {
            steps {
                dir('eksinstall') {
                    sh 'terraform init'
                }
            }
        }
        stage('terraform plan') {
            when {
                expression { return params.ACTION == 'plan' }
            }
            steps {
                dir('eksinstall') {
                    sh 'terraform plan'
                }
            }
        }
        stage('terraform validate') {
            steps {
                dir('eksinstall') {
                    sh 'terraform validate'
                }
            }
        }
        stage('Terraform apply') {
            when {
                expression { return params.ACTION == 'apply' }
            }
            steps {
                dir('eksinstall') {
                    sh 'terraform apply -auto-approve'
                }
            }
        }
        stage('terraform destroy') {
            when {
                expression { return params.ACTION == 'destroy' }
            }
            steps {
                dir('eksinstall') {
                    sh 'terraform destroy -auto-approve'
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
